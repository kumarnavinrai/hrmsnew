<?php
/**
 * @filefvg 
 * This is the main module file.
 */

/**
 * Implements hook_help().
 */
function manage_attendance_help($path, $arg) 
{

  if ($path == 'admin/help#manage_attendance') 
  {
    $output = '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('The manage_attendance module allows the user to manage attendance details.') . '</p>';
    return $output;
  }
}

function manage_attendance_menu() {
  $items['attendance'] = array(
    'title' => 'ATTENDANCE',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('manage_attendance_form'),
    'access callback' => TRUE,
    );
  return $items;
}

function manage_attendance_form($form,&$form_submit) {


    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
    ->propertyCondition('type', array('employee')) 
    ->fieldOrderBy('field_employee_name', 'value', 'ASC'); 
    $result = $query->execute();
    
    $nodes = node_load_multiple(array_keys($result['node']));
   
    foreach($nodes as $node): 
      $employeedata[$node->nid]= $node->field_employee_name[$node->language][0]['value'];
    //print_r($branchdata);
    endforeach;

    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
    ->propertyCondition('type', array('employee')) 
    ->fieldOrderBy('field_employee_id', 'value', 'ASC'); 
    $result = $query->execute();
    
    $nodes = node_load_multiple(array_keys($result['node']));
   
    foreach($nodes as $node): 
      $employeeid[$node->nid]= $node->field_employee_id[$node->language][0]['value'];
    //print_r($branchdata);
    endforeach;
  
  $form['employee'] = array(
    '#title' => t('Employee Name:'),
    '#type' => 'select',
/*    '#description' => 'Select name.',*/
    '#options' => $employeedata,
    //'#default_value' => isset($form_state['values']['dropdown_second']) ? $form_state['values']['dropdown_second'] : '',
    '#required' => TRUE,
    );
   
  $form['employeeid'] = array(
    '#title' => t('Employee ID:'),
    '#type' => 'select',
   /* '#description' => 'Select name.',*/
    '#options' => $employeeid,
    //'#default_value' => isset($form_state['values']['dropdown_second']) ? $form_state['values']['dropdown_second'] : '',
    '#required' => TRUE,
    );

  $form['dayspresent'] = array(
    '#title' => t('Days Present:'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
  $form['leaves'] = array(
    '#title' => t('Leaves:'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
  $form['intime'] = array(
    '#title' => t('In-Time:'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
  $form['outtime'] = array(
    '#title' => t('Out Time:'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
  $form['workinghours '] = array(
    '#title' => t('Working Hours:'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
  $form['totalovertime'] = array(
    '#title' => t('Overtime:'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
 /* $permanentstatus = array(
  'finalize' => t('Yes'),
  'cancel' => t('No'), 
 
  );
  $form['permanent'] = array(
  '#title' => t('Permanent:'),
  '#type' => 'checkboxes',

  '#options' => $permanentstatus,
  );*/
  $form['permanent'] = array(
  '#title' => t('Type:'),
  '#type' => 'select',
  
  '#options' => array(t('Yes'), t('No')),
  '#required' => TRUE,
  );
 
  $defaultvalues = array(
  'finalize' => t('Yes'),
  'cancel' => t('No'), 
  );
  $form['defaultvalues'] = array(
  '#title' => t('Default Values:'),
  '#type' => 'checkboxes',
  
  '#options' => $defaultvalues,
  );
  $form['submit'] = array(
    '#value' => 'SUBMIT',
    '#attributes' => array('class' => array('mysubmit')),
    '#type' => 'submit',
    );
  return $form;
}

function manage_attendance_form_form_submit($form, &$form_state) {

    $employee =  $form['employee']['#options'][$form_state['values']['employee']];
    $employeeid =  $form['employeeid']['#options'][$form_state['values']['employeeid']];
    $dayspresent = $form_state['values']['dayspresent'];
    $leaves = $form_state['values']['leaves'];
    $intime = $form_state['values']['intime'];
    $outtime = $form_state['outtime']['outtime'];
    $workinghours = $form_state['values']['workinghours'];
    $permanent = $form_state['values']['permanent'];
    $overtime = $form_state['values']['totalovertime'];
    $defaultvalues = $form_state['values']['defaultvalues'];
   
    
    $node = new stdClass();
    $node->type = 'manage_attendance';
    //node_object_prepare($node);
    
    $node->uid = '4';
    $node->title    = $employee;
    $node->language = LANGUAGE_NONE;

    //$node->body[$node->language][0]['value']   = 
    $node->field_employee[$node->language][0]['value'] =$employee;
    $node->field_employeeid[$node->language][0]['value'] = $employeeid;
    $node->field_days_present[$node->language][0]['value']  =  $dayspresent;
    $node->field_leaves[$node->language][0]['value']  =  $leaves;
    $node->field_intime[$node->language][0]['value']  = $intime;
    $node->field_out_time[$node->language][0]['value']  =$outtime;
    $node->field_working_hours[$node->language][0]['value']  = $workinghours;
    $node->field_permanent[$node->language][0]['value']  =  $permanent;
    $node->field_over_time[$node->language][0]['value']  =  $overtime;
    $node->field_default_values[$node->language][0]['value']  =  $defaultvalues;
 
  
  //$path = 'content/programmatically_created_node_' . date('YmdHis');
  //$node->path = array('alias' => $path);

    node_save($node);
   
  
      if($node){
       drupal_set_message("Attendance details saved successfully");
       //drupal_set_message( $company);
      


      }
     
     
}